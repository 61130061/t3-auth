import { type NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";

var bcrypt = require("bcryptjs");
import { useState } from "react";
import { useSession } from "next-auth/react"

const SignUp: NextPage = () => {
  const { data: session, status } = useSession();
  const router = useRouter();

  const [form, setForm] = useState({ email: '', password: '' });

  const onTyping = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.id == 'email') setForm({ ...form, email: e.target.value });
    else if (e.target.id == 'password') setForm({ ...form, password: e.target.value });
  }

  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    // TODO input validation
    const hashedPassword = await bcrypt.hashSync(form.password, 10);

    const input = {
      email: form.email,
      password: hashedPassword
    }

    const res = await fetch('http://localhost:3000/api/user/signup', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(input)
    });
    const data = await res.json();

    if (data.success) {
      router.push('/user/signin')
    } else {
      console.log('fail');
    }
  }

  if (status === "loading") return <div>loading...</div>

  if (session) router.push('/');

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex min-h-screen flex-col items-center justify-center p-4">
        <h1 className="text-5xl font-extrabold leading-normal text-gray-700 md:text-[5rem] my-5">
          Register <span className="text-purple-300">T3</span> App
        </h1>
        <form onSubmit={onSubmit} className="flex flex-col gap-5 my-5">
          <div className="flex flex-col gap-2">
            <label htmlFor="email">Email</label>
            <input
              id="email"
              type="email"
              placeholder="email@gmail.com"
              className="border rounded p-1"
              value={form.email}
              onChange={onTyping}
            />
          </div>
          <div className="flex flex-col gap-2">
            <label htmlFor="password">Password</label>
            <input
              id="password"
              type="password"
              className="border rounded p-1"
              value={form.password}
              onChange={onTyping}
            />
          </div>
          <button>Sign up</button>
        </form>
        <div>Already have account? <a href="/user/signin">Login here</a></div>
      </main>
    </>
  );
};

export default SignUp;